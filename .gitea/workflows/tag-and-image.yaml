name: Create a new tag and build a new image
on:
  pull_request:
    types:
      - closed
    branches:
      - main
    paths-ignore:
      - deploy/**

env:
  NEXT_TAG: 0.0.3
  REGISTRY: "gitea.dreger.lan"
  IMAGE_NAME: ${{ gitea.repository }}

jobs:
  tag-and-image:
    if: gitea.event.pull_request.merged == true
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4
      - name: Set up Golang
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - name: Show Go version
        run: go version
      - name: Download dependencies
        run: go mod download
      - name: Build the code
        run: go build -o /dev/null ./...
      - name: Run tests
        run: |
          go test -v -race -shuffle=on -buildvcs -coverprofile=/tmp/cover-${{ github.run_number }}.out.tmp ./...
      - name: Test coverage report generation
        run: |
          grep -v "_mock.go" /tmp/cover-${{ github.run_number }}.out.tmp > /tmp/cover-${{ github.run_number }}.out
          go tool cover -html=/tmp/cover-${{ github.run_number }}.out -o /tmp/coverage-${{ github.run_number }}.html
      - name: Upload test coverage report
        uses: actions/upload-artifact@v3
        with:
          name: Test Coverage Report
          path: /tmp/coverage-${{ github.run_number }}.html
        env:
          NODE_TLS_REJECT_UNAUTHORIZED: 0
      - name: Create a new Git tag
        run: |
          git config --local user.email "actions@gitea.dreger.lan"
          git config --local user.name "Gitea Actions"
          git tag -a "${{ env.NEXT_TAG }}" -m "Release ${{ github.run_number }}"
          git push origin "${{ env.NEXT_TAG }}"
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Add registry CA
        env:
          CA_SECRET: ${{ secrets.REGISTRY_CA }}
        shell: bash
        run: |
          printf '%s' "$CA_SECRET" > /etc/ssl/certs/registry-ca.pem
          update-ca-certificates
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-config-inline: |
            [registry."${{ env.REGISTRY }}"]
              ca=["/etc/ssl/certs/registry-ca.pem"]
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ gitea.repository_owner }}
          password: ${{ secrets.CI_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: type=semver,pattern={{version}},value=${{ env.NEXT_TAG }}
          labels: org.opencontainers.image.description=Library manager GO application
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: deploy/docker/Dockerfile
          push: true
          platforms: linux/amd64
          provenance: false # https://github.com/docker/build-push-action/issues/820
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
