openapi: 3.0.0
info:
  title: Library management API
  description: API for managing a book library
  version: 0.0.7
servers:
  - url: http://localhost:8070
    description: Local test server
tags:
  - name: book
    description: Manage books
paths:
  /v1/books:
    get:
      operationId: getBooks
      tags:
        - book
      summary: Books lookup
      description: Returns a pageable book lookup result
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/bookSort'
        - $ref: '#/components/parameters/bookQuery'
        - $ref: '#/components/parameters/bookSbn'
        - $ref: '#/components/parameters/bookLanguages'
        - $ref: '#/components/parameters/bookPublishers'
        - $ref: '#/components/parameters/bookAuthors'
        - $ref: '#/components/parameters/bookCategories'
        - $ref: '#/components/parameters/bookFileTypes'
        - $ref: '#/components/parameters/bookTags'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookLookupItemPage'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                errors:
                  - message: 'wrong sort request: weight,desc'
                    field: 'sort'

components:
  parameters:
    page:
      in: query
      name: page
      schema:
        type: integer
        minimum: 1
        default: 1
      required: false
      description: 'The page number to return'
      example: 1
    size:
      in: query
      name: size
      schema:
        type: integer
        minimum: 1
        default: 10
      required: false
      description: 'The page size to return'
      example: 10

    bookSort:
      in: query
      name: sort
      schema:
        type: string
        default: 'id,desc'
        enum:
          - 'id,desc'
          - 'id,asc'
          - 'title,asc'
          - 'title,desc'
          - 'subtitle,asc'
          - 'subtitle,desc'
          - 'isbn10,asc'
          - 'isbn10,desc'
          - 'isbn13,asc'
          - 'isbn13,desc'
          - 'asin,asc'
          - 'asin,desc'
          - 'pages,asc'
          - 'pages,desc'
          - 'edition,asc'
          - 'edition,desc'
          - 'pub_date,asc'
          - 'pub_date,desc'
          - 'book_file_size,asc'
          - 'book_file_size,desc'
          - 'created_at,asc'
          - 'created_at,desc'
          - 'updated_at,asc'
          - 'updated_at,desc'
      required: false
      description: 'The result sorting order'
      example: 'updated_at,desc'
    bookQuery:
      in: query
      name: query
      schema:
        type: string
      required: false
      description: 'Query term for books lookup'
      example: 'react'
    bookSbn:
      in: query
      name: sbn
      schema:
        type: string
      required: false
      description: 'Standard Book Number, one of: ISBN10 / ISBN13 / ASIN'
      example: '1234567890'
    bookLanguages:
      in: query
      name: language
      schema:
        type: array
        items:
          type: number
          format: int64
      required: false
      description: 'Book language ID list'
      example: [ 1 ]
    bookPublishers:
      in: query
      name: publisher
      schema:
        type: array
        items:
          type: number
          format: int64
      required: false
      description: 'Book publisher ID list'
      example: [ 1 ]
    bookAuthors:
      in: query
      name: author
      schema:
        type: array
        items:
          type: number
          format: int64
      required: false
      description: 'Book author ID list'
      example: [ 1 ]
    bookCategories:
      in: query
      name: category
      schema:
        type: array
        items:
          type: number
          format: int64
      required: false
      description: 'Book category ID list'
      example: [ 1 ]
    bookFileTypes:
      in: query
      name: file_type
      schema:
        type: array
        items:
          type: number
          format: int64
      required: false
      description: 'Book file type ID list'
      example: [ 1 ]
    bookTags:
      in: query
      name: tag
      schema:
        type: array
        items:
          type: number
          format: int64
      required: false
      description: 'Book tag ID list'
      example: [ 1 ]

  schemas:
    BasePage:
      type: object
      required:
        - page
        - size
        - total_pages
        - total_elements
      properties:
        page:
          type: integer
        size:
          type: integer
        total_pages:
          type: integer
        total_elements:
          type: integer

    BookLookupItemPage:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          allOf:
            - $ref: '#/components/schemas/BasePage'
            - type: object
              required:
                - content
              properties:
                content:
                  type: array
                  minItems: 0
                  items:
                    $ref: '#/components/schemas/BookLookupItem'

    BookLookupItem:
      type: object
      properties:
        id:
          type: integer
          format: 'int64'
        title:
          type: string
        subtitle:
          type: string
        isbn10:
          type: string
        isbn13:
          type: integer
        asin:
          type: string
        pages:
          type: integer
        edition:
          type: integer
        pub_date:
          type: string
          format: 'date-time'
        book_file_size:
          type: integer
        cover_file_name:
          type: string
        publisher:
          type: string
        language:
          type: string
        author_ids:
          type: array
          items:
            type: integer
        category_ids:
          type: array
          items:
            type: integer
        file_type_ids:
          type: array
          items:
            type: integer
        tag_ids:
          type: array
          items:
            type: integer
      example:
        id: 1
        title: 'CockroachDB: The Definitive Guide'
        subtitle: 'Distributed Data at Scale'
        isbn10: '1234567890'
        isbn13: 9871234567890
        asin: 'BH12345678'
        pages: 256
        edition: 2
        pub_date: '2022-05-24T00:00:00Z'
        book_file_size: 25415429
        cover_file_name: '1234567890.jpg'
        publisher: 'OReilly'
        language: 'English'
        author_ids: [ 1, 3 ]
        category_ids: [ 1, 5, 12 ]
        file_type_ids: [ 1, 2 ]
        tag_ids: [ ]

    ErrorResponse:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            required:
              - message
            properties:
              message:
                type: string
              field:
                type: string
